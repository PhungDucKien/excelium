apply plugin: 'application'

mainClassName = 'excelium.cli.Application'
applicationName = 'excelium'
applicationDefaultJvmArgs = ["-Dapp.home=APP_HOME_PLACEHOLDER"]

dependencies {
    compile project(':excelium-model')
    compile project(':excelium-common')
    compile project(':excelium-core')
    compile project(':excelium-executor')
    compile project(':excelium-sheets')
    compile project(':excelium-xls')
    compile project(':excelium-generator')

    compile group: 'com.beust', name: 'jcommander', version: '1.72'
    compile group: 'de.codeshelf.consoleui', name: 'consoleui', version: '0.0.9'
}

task cleanDist(type: Delete) {
    delete = file('../dist')
}

task dist(type: Zip, dependsOn: ['cleanDist', 'build']) {
    from('build/libs') {
        include '*.jar'
        into 'lib'
    }
    from(configurations.runtime) {
        into 'lib'
    }
    from('build/scripts') {
        into 'bin'
    }

    destinationDir = file('../dist')
    baseName = 'excelium'
}

task cleanInstall(type: Copy) {
    delete 'build/install/excelium/bin', 'build/install/excelium/lib'
}

task install(type: Copy, dependsOn: ['cleanInstall', 'build']) {
    from('build/libs') {
        include '*.jar'
        into 'lib'
    }
    from(configurations.runtime) {
        into 'lib'
    }
    from('build/scripts') {
        into 'bin'
    }

    destinationDir = file('build/install/excelium')
}

startScripts {
    doLast {
        unixScript.text = unixScript.text.replace('APP_HOME_PLACEHOLDER', '\$APP_HOME')
        unixScript.text = unixScript.text.replaceFirst('CLASSPATH=.*', 'CLASSPATH=\\$APP_HOME/lib/*:\\$APP_HOME/config')
        unixScript.text = unixScript.text.replace('  cd "$(dirname "$0")"', '  cd \$HOME')

        windowsScript.text = windowsScript.text.replace('APP_HOME_PLACEHOLDER', '%~dp0..')
        windowsScript.text = windowsScript.text.replaceFirst('set CLASSPATH=.*', 'set CLASSPATH=%APP_HOME%\\\\lib\\\\*;%APP_HOME%\\\\config')
    }
}
